{"version":3,"sources":["dog.js","dograin.js","index.js"],"names":["Dog","opts","loaded","alive","x","Math","random","y","rotation","xSpeed","ySpeed","rSpeed","fadeSpeed","container","HTMLElement","document","body","img","Image","src","ceil","style","maxWidth","height","opacity","transition","setPosition","appendChild","onload","show","onloadCallback","callback","position","left","top","transform","Promise","resolve","reject","setTimeout","deltaTime","parentNode","removeChild","DogRain","isRaining","dogs","limit","speed","minInterval","maxInterval","createElement","width","onclick","stop","window","event","eventShouldTriggerStart","start","node","toElement","classList","contains","startCreationLoop","animate","length","pop","hide","then","dog","cleanUp","push","now","performance","lastFrame","i","kill","splice","requestAnimationFrame","dogRain","init"],"mappings":"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","file":"dograin.js","sourceRoot":"../src","sourcesContent":["export default class Dog {\n    constructor(opts) {\n        opts = opts || {}\n\n        this.loaded = false\n        this.alive = true\n\n        this.x = typeof opts.x === 'number' ? opts.x : 100 * Math.random()\n        this.y = typeof opts.y === 'number' ? opts.y : 100 * Math.random()\n        this.rotation = typeof opts.rotation === 'number' ? opts.rotation : 360 * Math.random()\n        this.xSpeed = typeof opts.xSpeed === 'number' ? opts.xSpeed : 0\n        this.ySpeed = typeof opts.ySpeed === 'number' ? opts.ySpeed : 0\n        this.rSpeed = typeof opts.rSpeed === 'number' ? opts.rSpeed : 0\n        this.fadeSpeed = typeof opts.fadeSpeed === 'number' ? opts.fadeSpeed : 1000\n        this.container = opts.container instanceof HTMLElement ? opts.container : document.body\n\n        this.img = new Image()\n        this.img.src = 'https://placedog.net/' + Math.ceil(1000 * Math.random())\n\n        this.img.style.maxWidth = '300px'\n        this.img.style.height = 'auto'\n        this.img.style.opacity = 0\n        this.img.style.transition = 'opacity ' + this.fadeSpeed + 'ms ease-in'\n\n        this.setPosition(opts.x, opts.y, opts.rotation)\n\n        this.container.appendChild(this.img)\n\n        this.img.onload = () => {\n            this.loaded = true\n            this.show()\n\n            if (typeof this.onloadCallback === 'function') {\n                this.onloadCallback(this)\n            }\n        }\n    }\n\n    onload(callback) {\n        this.onloadCallback = callback\n    }\n\n    setPosition(x, y, rotation) {\n        this.x = typeof x === 'number' ? x : 100 * Math.random()\n        this.y = typeof y === 'number' ? y : 100 * Math.random()\n        this.rotation = typeof rotation === 'number' ? rotation : 360 * Math.random()\n\n        this.img.style.position = 'absolute'\n        this.img.style.left = this.x + '%'\n        this.img.style.top = this.y + '%'\n        this.img.style.transform = 'translate(-50%, -50%) rotate(' + this.rotation + 'deg)'\n    }\n\n    show() {\n        return new Promise((resolve, reject) => {\n            this.img.style.opacity = 1\n            setTimeout(() => {\n                resolve(this)\n            }, this.fadeSpeed)\n        })\n    }\n\n    hide() {\n        return new Promise((resolve, reject) => {\n            this.img.style.opacity = 0\n            setTimeout(() => {\n                resolve(this)\n            }, this.fadeSpeed)\n        })\n    }\n\n    animate(deltaTime) {\n        if (!this.loaded || !this.alive) {\n            return\n        }\n\n        deltaTime = deltaTime || 0\n\n        this.setPosition(\n            this.x + this.xSpeed * deltaTime,\n            this.y + this.ySpeed * deltaTime,\n            this.rotation + this.rSpeed * deltaTime\n        )\n    }\n\n    kill() {\n        this.alive = false\n    }\n\n    cleanUp() {\n        this.img.parentNode.removeChild(this.img)\n    }\n}\n","import Dog from './dog'\n\nexport default class DogRain {\n    constructor() {\n        this.isRaining = false\n        this.dogs = []\n        this.limit = 20\n        this.speed = 0.02\n        this.minInterval = 200\n        this.maxInterval = 2000\n\n        this.container = document.createElement('div')\n        this.container.style.position = 'fixed'\n        this.container.style.left = 0\n        this.container.style.top = 0\n        this.container.style.width = '100vw'\n        this.container.style.height = '100vh'\n        this.container.onclick = () => {\n            this.stop()\n        }\n    }\n\n    /**\n     * Initialize event handlers\n     */\n    init() {\n        window.onclick = event => {\n            if (this.eventShouldTriggerStart(event)) {\n                this.start()\n            }\n        }\n    }\n\n    /**\n     * Test event element for dograin class\n     * @param UIEvent event\n     * @return boolean  Returns true when target element has class, or false\n     */\n    eventShouldTriggerStart(event) {\n        let node = event.toElement\n\n        do {\n            // look for dograin class\n            if (node.classList.contains('dograin')) {\n                return true\n            }\n\n            // climb up to parent\n            node = node.parentNode\n        } while (node instanceof HTMLElement && node.parentNode)\n\n        return false\n    }\n\n    /**\n     * Make it rain... Dogs!\n     */\n    start() {\n        document.body.appendChild(this.container)\n\n        if (this.isRaining) {\n            return this.stop()\n        }\n\n        this.isRaining = true\n\n        this.startCreationLoop()\n        this.animate()\n    }\n\n    /**\n     * Stop the rain... :(\n     */\n    stop() {\n        this.isRaining = false\n\n        while (this.dogs.length > 0) {\n            this.dogs.pop().hide().then(dog => {\n                dog.cleanUp()\n            })\n        }\n\n        document.body.removeChild(this.container)\n    }\n\n    startCreationLoop() {\n        // stop creating if not raining\n        if (!this.isRaining) {\n            return\n        }\n\n        if (this.dogs.length < this.limit) {\n            this.dogs.push(new Dog({\n                x: 100 * Math.random(),\n                y: 0,\n                ySpeed: this.speed,\n                rSpeed: 0,\n                container: this.container,\n            }))\n        }\n\n        setTimeout(() => {\n            this.startCreationLoop()\n        }, this.minInterval + (this.maxInterval - this.minInterval) * Math.random())\n    }\n\n    animate(now) {\n        if (!this.isRaining) {\n            return\n        }\n\n        now = now || performance.now()\n        const deltaTime = this.lastFrame ? now - this.lastFrame : 0\n        this.lastFrame = now\n\n        for (let i in this.dogs) {\n            let dog = this.dogs[i]\n\n            // Remove dog from DOM\n            if (!dog.alive) {\n                dog.cleanUp()\n                this.dogs.splice(i, 1)\n                continue\n            }\n\n            if (dog.y > 100) {\n                dog.hide().then(dog => {\n                    dog.kill()\n                })\n            }\n            dog.animate(deltaTime)\n        }\n\n        window.requestAnimationFrame(now => this.animate(now))\n    }\n}\n","import DogRain from './dograin'\n\n(window.dogRain = new DogRain()).init()"]}